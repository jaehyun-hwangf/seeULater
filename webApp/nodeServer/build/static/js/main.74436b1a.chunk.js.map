{"version":3,"sources":["components/Form.js","components/img/loading.png","components/Url.js","components/UrlList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","urls","setUrls","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","Axios","post","userID","url","then","text","completed","id","Math","random","alert","name","CustomComponent","loading","preview","src","LoadingImg","alt","img","domain","title","description","Url","LinkHandler","window","open","render","map","item","filter","el","UrlList","filteredUrls","urlID","App","useState","status","setFilteredUrls","useEffect","getLocalUrls","filterHandler","saveLocalUrls","localStorage","setItem","JSON","stringify","get","response","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74436b1a.chunk.js","sourcesContent":["import Axios from 'axios';\r\nimport React from \"react\";\r\n\r\nconst Form = ({ setInputText, urls, setUrls, inputText, setStatus }) => {\r\n    //Here I can write javascript code and function\r\n    \r\n    // 이벤트를 파라미터로 함수 만들기, onChange 이벤트 등록\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitUrlHandler = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('http://127.0.0.1:3001/url', {\r\n            userID: 1,  //set userid\r\n            url: inputText\r\n        }).then(() => {\r\n            setInputText(\"\");\r\n            setUrls([\r\n                ...urls, {text: inputText, completed: false, id: Math.random() * 1000 },\r\n            ]);\r\n            alert(\"store success.\");\r\n        });\r\n    };\r\n\r\n    // onChange 등록, all, complete, uncomplete 바뀔 때 상태 등록\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"url-input\" />\r\n            <button onClick={submitUrlHandler} className=\"url-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"urls\" className=\"filter-url\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Read</option>\r\n                    <option value=\"uncompleted\">Unread</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/loading.decd7be1.png\";","import React from \"react\";\r\nimport LinkPreview from '@ashwamegh/react-link-preview';\r\nimport LoadingImg from './img/loading.png';\r\n\r\nfunction CustomComponent({ loading, preview }) {\r\n    return loading\r\n        ? (\r\n            <div className=\"preview-wrapper\">\r\n                <div className=\"img-div\">\r\n                    <img src={LoadingImg} alt=\"...\" />\r\n                </div>\r\n                <div className=\"p-div\">\r\n                    <p>&nbsp;</p>\r\n                    <p>Loading... </p>\r\n                    <p className=\"p-description\">&nbsp;</p>\r\n                </div>\r\n            </div>\r\n        )\r\n        : (\r\n            <div className=\"preview-wrapper\">\r\n                <div className=\"img-div\">\r\n                    <img src={preview.img} /*alt={preview.title}*/ />\r\n                </div>\r\n                <div className=\"p-div\">\r\n                    <p>{preview.domain}</p>\r\n                    <p>{preview.title}</p>\r\n                    <p className=\"p-description\">{preview.description}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst Url = ({ url, setUrls, urls }) => {\r\n    //Events\r\n    const LinkHandler = () => {\r\n        window.open(url.url, '_blank');\r\n    }\r\n    const deleteHandler = () => {\r\n        console.log(url);\r\n        setUrls(urls.filter((el) => el.id !== url.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setUrls(\r\n            urls.map((item) => {\r\n                if (item.id === url.id) {\r\n                    return {\r\n                        ...item,\r\n                        completed: !item.completed,\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"url\">\r\n            <li className={`url-item ${url.completed ? \"completed\" : \"\"}`} onClick={LinkHandler}>{url.url}</li>\r\n            <div className=\"url-preview-button\">\r\n                <div onClick={LinkHandler}>\r\n                <LinkPreview url={url.url} render={CustomComponent}/>\r\n                </div>\r\n                <div className=\"url-button-div\">\r\n                    <button onClick={completeHandler} className=\"complete-btn\">\r\n                        <i className=\"fas fa-check\"></i>\r\n                    </button>\r\n                    <button onClick={deleteHandler} className=\"trash-btn\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Url;","import React from 'react';\r\n//Import components\r\nimport Url from './Url';\r\n\r\nconst UrlList = ({urls, setUrls, filteredUrls}) => {\r\n    console.log(filteredUrls);\r\n    return (\r\n        <div className=\"url-container\">\r\n            <ul className=\"url-list\">\r\n                {filteredUrls.map((url) => (\r\n                    <Url \r\n                    setUrls={setUrls}\r\n                    urls={urls}\r\n                    url={url}\r\n                    urlID={url.urlID}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default UrlList;","import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport Axios from 'axios';\r\n//Importing Components\r\nimport Form from \"./components/Form\";\r\nimport UrlList from \"./components/UrlList\";\r\n\r\nfunction App() {\r\n  //State stuff\r\n  \r\n  //사용할 변수들과 상태를 설정한다.(초기값)\r\n  const [urls, setUrls] = useState([]);\r\n  const [urlID, setUrlID] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [memo, setMemo] = useState(\"\");\r\n  const [directory, setDirectory] = useState(\"\");\r\n  const [regdate, setRegdate] = useState(\"\");\r\n  \r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredUrls, setFilteredUrls] = useState([]);\r\n\r\n  //RUN ONCE when the app start \r\n  useEffect(() => {\r\n    getLocalUrls();\r\n  }, []); // , [] 컴포넌트가 마운트 될 때(렌더링) 한번 실행한다. \r\n  //USE EFFECT\r\n  //핸들러가 실행될 때 마다 실행하는 함수.\r\n  useEffect(() => {\r\n    // console.log('hey');\r\n    filterHandler();\r\n    saveLocalUrls();\r\n  }, [urls, status]); //urls, status값이 바뀔 때마다 실행된다.\r\n  //Functions\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case 'completed':\r\n        setFilteredUrls(urls.filter((url) => url.completed === true));\r\n        break;\r\n      case 'uncompleted':\r\n        setFilteredUrls(urls.filter((url) => url.completed === false));\r\n        break;\r\n      default:\r\n        setFilteredUrls(urls);\r\n        break;\r\n    }\r\n  };\r\n  //Save to Local\r\n  //urls(url 데이터셋)를 로컬스토리지에 저장, update 날짜를 설정하여 cache 설정 가능할 것 같아보임.\r\n  const saveLocalUrls = () => {\r\n    localStorage.setItem('urls', JSON.stringify(urls));\r\n  };\r\n  const getLocalUrls = () => {\r\n    // if (localStorage.getItem('urls') === null) {\r\n    //   localStorage.setItem('urls', JSON.stringify([]));\r\n    // } else {\r\n    //   let urlLocal = JSON.parse(localStorage.getItem(\"urls\"));\r\n    //   setUrls(urlLocal);\r\n    // }\r\n    Axios.get('http://127.0.0.1:3001/urls').then((response) => {\r\n      console.log(response.data);\r\n      setUrls(response.data);\r\n      // console.log(response);\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>seeULater</h1>\r\n      </header>\r\n      <div className=\"Body\">\r\n        <Form\r\n          inputText={inputText}\r\n          urls={urls}\r\n          setUrls={setUrls}\r\n          setInputText={setInputText}\r\n          setStatus={setStatus}\r\n          // inputText={inputText}\r\n          // urls={urls}\r\n          // setUrls={setUrls}\r\n          // setInputText={setInputText}\r\n          // setStatus={setStatus}\r\n        />\r\n        <UrlList\r\n          filteredUrls={filteredUrls}\r\n          setUrls={setUrls}\r\n          urls={urls}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}