{"version":3,"sources":["define/define.js","components/img/alligator.png","components/Header.js","App.js","components/Form.js","components/img/loading.png","components/Url.js","components/UrlList.js","reportWebVitals.js","index.js"],"names":["module","exports","URL","PORT","Header","baseurl","className","onClick","window","location","href","src","LogoAlligator","alt","Form","setInputText","urls","setUrls","inputText","setStatus","value","onChange","e","target","type","preventDefault","Axios","post","userID","url","then","completed","id","Math","random","alert","name","Url","title","open","icon_img","LoadingImg","map","item","delete","url_id","response","filter","val","UrlList","filteredUrls","urlID","define","require","argMode","process","REACT_APP_MODE","App","useState","status","setFilteredUrls","useEffect","getUrls","filterHandler","saveLocalUrls","localStorage","setItem","JSON","stringify","console","log","get","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b84daf56.chunk.js","sourcesContent":["module.exports = {\r\n    URL: \"http://3.36.36.62\",\r\n    // URL: \"http://127.0.0.1:3001\",\r\n    PORT: 3001\r\n}","export default __webpack_public_path__ + \"static/media/alligator.cf10925a.png\";","// import { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\r\nimport LogoAlligator from './img/alligator.png';\r\n\r\nfunction Header() {\r\n    const handlerClick = () => {\r\n        window.location.href=\"/\";\r\n    }\r\n    return (\r\n        <header>\r\n            <div className=\"main-header\" onClick={handlerClick}>\r\n                <h1>seeULater</h1><img className=\"main-logo-img\" src={LogoAlligator} alt=\"seeULater\" />\r\n            </div>\r\n        </header>\r\n        // <Router>\r\n        //     <Link to=\"/App\">\r\n        //     </Link>\r\n        //     <Route path=\"/App\" />\r\n        // </Router >\r\n        // <button type=\"button\" onClick={handleClick}>\r\n        //   Go home\r\n        // </button>\r\n    );\r\n}\r\n\r\n{/* <Menu>\r\n   <MenuItem component={Link} to={'/first'}>Team 1</MenuItem>\r\n   <MenuItem component={Link} to={'/second'}>Team 2</MenuItem>\r\n</Menu> */}\r\n\r\nexport default Header;","import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\nimport Axios from 'axios';\r\n//Importing Components\r\nimport Header from \"./components/Header\";\r\nimport Form from \"./components/Form\";\r\nimport UrlList from \"./components/UrlList\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst define = require(\"./define/define\");\r\n\r\n// npm run start:dev로 실행 시 process.env.REACT_APP_MODE = dev\r\nconst argMode = process.env.REACT_APP_MODE;\r\nlet baseurl;\r\n// dev/prod 모드 설정\r\nfunction setBaseUrl() {\r\n  if (argMode === \"dev\") {\r\n    baseurl = \"http://127.0.0.1\";\r\n  } else {\r\n    baseurl = define.URL;\r\n  }\r\n  baseurl = baseurl + \":\" + define.PORT;\r\n}\r\n\r\nfunction App() {\r\n\r\n  setBaseUrl();\r\n  //사용할 변수들과 상태를 설정한다.(초기값)\r\n  const [urls, setUrls] = useState([]);\r\n  const [urlID, setUrlID] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [memo, setMemo] = useState(\"\");\r\n  const [directory, setDirectory] = useState(\"\");\r\n  const [regdate, setRegdate] = useState(\"\");\r\n\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredUrls, setFilteredUrls] = useState([]);\r\n\r\n  //RUN ONCE when the app start \r\n  useEffect(() => {\r\n    getUrls();\r\n  }, []); // , [] 컴포넌트가 마운트 될 때(렌더링) 한번 실행한다. \r\n  //USE EFFECT\r\n  //핸들러가 실행될 때 마다 실행하는 함수.\r\n  useEffect(() => {\r\n    // console.log('hey');\r\n    filterHandler();\r\n    saveLocalUrls();\r\n    // getUrls();\r\n  }, [urls, status]); //urls, status값이 바뀔 때마다 실행된다.\r\n  //Functions\r\n  const filterHandler = () => {\r\n    switch (status) {\r\n      case 'completed':\r\n        setFilteredUrls(urls.filter((url) => url.completed === true));\r\n        break;\r\n      case 'uncompleted':\r\n        setFilteredUrls(urls.filter((url) => url.completed === false));\r\n        break;\r\n      default:\r\n        setFilteredUrls(urls);\r\n        break;\r\n    }\r\n  };\r\n  //Save to Local\r\n  //urls(url 데이터셋)를 로컬스토리지에 저장, update 날짜를 설정하여 cache 설정 가능할 것 같아보임.\r\n  const saveLocalUrls = () => {\r\n    localStorage.setItem('urls', JSON.stringify(urls));\r\n  };\r\n  const getUrls = () => {\r\n    // if (localStorage.getItem('urls') === null) {\r\n    //   localStorage.setItem('urls', JSON.stringify([]));\r\n    // } else {\r\n    //   let urlLocal = JSON.parse(localStorage.getItem(\"urls\"));\r\n    //   setUrls(urlLocal);\r\n    // }\r\n    console.log(baseurl);\r\n    Axios.get(baseurl + \"/urls\").then((response) => {\r\n      // console.log(response.data);\r\n      setUrls(response.data);\r\n      // console.log(response);\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>{argMode}</h1>\r\n      <Header />\r\n      <div className=\"Body\">\r\n        <Form\r\n          inputText={inputText}\r\n          urls={urls}\r\n          setUrls={setUrls}\r\n          setInputText={setInputText}\r\n          setStatus={setStatus}\r\n        // inputText={inputText}\r\n        // urls={urls}\r\n        // setUrls={setUrls}\r\n        // setInputText={setInputText}\r\n        // setStatus={setStatus}\r\n        />\r\n        <UrlList\r\n          filteredUrls={filteredUrls}\r\n          setUrls={setUrls}\r\n          urls={urls}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import Axios from 'axios';\r\nimport React from \"react\";\r\n\r\nconst Form = ({ setInputText, urls, setUrls, inputText, setStatus }) => {\r\n    //Here I can write javascript code and function\r\n\r\n    // 이벤트를 파라미터로 함수 만들기, onChange 이벤트 등록\r\n    const inputTextHandler = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitUrlHandler = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('http://3.36.36.62:3001/urls', {\r\n            userID: 1,  //set userid\r\n            url: inputText\r\n        }).then(() => {\r\n            setUrls([\r\n                ...urls, { url: inputText, completed: false, id: Math.random() * 1000 },\r\n            ]);\r\n            setInputText(\"\");\r\n            alert(\"store success.\");\r\n        });\r\n    };\r\n\r\n    // onChange 등록, all, complete, uncomplete 바뀔 때 상태 등록\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <form className=\"inputForm\">\r\n            <div className=\"input-addbutton-wrapper\">\r\n                <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"url-input\" />\r\n                <button onClick={submitUrlHandler} className=\"url-button\" type=\"submit\">\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n            </div>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"urls\" className=\"filter-url\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Read</option>\r\n                    <option value=\"uncompleted\">Unread</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/loading.decd7be1.png\";","import React from \"react\";\r\nimport LinkPreview from '@ashwamegh/react-link-preview';\r\nimport LoadingImg from './img/loading.png';\r\nimport Axios from 'axios';\r\n\r\n// function CustomComponent({ loading, preview }) {\r\n//     return loading\r\n//         ? (\r\n//             <div className=\"preview-wrapper\">\r\n//                 <div className=\"img-div\">\r\n//                     <img src={LoadingImg} alt=\"...\" />\r\n//                 </div>\r\n//                 <div className=\"p-div\">\r\n//                     <p>&nbsp;</p>\r\n//                     <p>Loading... </p>\r\n//                     <p className=\"p-description\">&nbsp;</p>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//         : (\r\n//             <div className=\"preview-wrapper\">\r\n//                 <div className=\"img-div\">\r\n//                     <img src={preview.img} /*alt={preview.title}*/ />\r\n//                 </div>\r\n//                 <div className=\"p-div\">\r\n//                     <p>{preview.domain}</p>\r\n//                     <p>{preview.title}</p>\r\n//                     <p className=\"p-description\">{preview.description}</p>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n// }\r\n\r\nconst Url = ({ url, setUrls, urls }) => {\r\n    //Events\r\n    const LinkHandler = () => {\r\n        window.open(url.url, '_blank');\r\n    }\r\n    const deleteHandler = (e) => {\r\n        // console.log(\"url= \" + url.url);\r\n        // console.log(\"url.urlID= \" + url.url_id);\r\n        Axios.delete(`http://3.36.36.62:3001/urls/${url.url_id}`)\r\n            .then((response) => {\r\n                // 삭제한 url_id와 다른 것들만 urls에 세팅\r\n                setUrls(urls.filter((val) => {\r\n                    return val.url_id !== url.url_id\r\n                }))\r\n                alert(\"delete!\");\r\n            })\r\n    };\r\n    const completeHandler = () => {\r\n        setUrls(\r\n            urls.map((item) => {\r\n                if (item.id === url.id) {\r\n                    return {\r\n                        ...item,\r\n                        completed: !item.completed,\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"url\">\r\n            <div className='url-upper'>\r\n                <a className={`url_a ${url.completed ? \"completed\" : \"\"}`} href={url.url} target=\"_blank\">{url.title ? url.title : url.url}</a>\r\n            </div>\r\n            <div className=\"url-preview-and-button\">\r\n                <div onClick={LinkHandler}>\r\n                    {/* <LinkPreview url={url.url} render={CustomComponent} /> */}\r\n                    <div className=\"preview-wrapper\">\r\n                        <div className=\"img-div\">\r\n                            <img src={url.icon_img ? url.icon_img : LoadingImg} alt={url.title} />\r\n                        </div>\r\n                        <div className=\"p-div\">\r\n                            <p>{url.url}</p>\r\n                            <p></p>\r\n                            <p className=\"p-description\"></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"url-button-div\">\r\n                    <button onClick={completeHandler} className=\"complete-btn\">\r\n                        <i className=\"fas fa-check\"></i>\r\n                    </button>\r\n                    <button onClick={deleteHandler} className=\"trash-btn\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Url;","import React from 'react';\r\n//Import components\r\nimport Url from './Url';\r\n\r\nconst UrlList = ({urls, setUrls, filteredUrls}) => {\r\n    // console.log(\"tt\");\r\n    // console.log(urls);\r\n    // console.log(filteredUrls);\r\n    return (\r\n        <div className=\"url-container\">\r\n            <ul className=\"url-list\">\r\n                {filteredUrls.map((url) => (\r\n                    <Url key={url.url_id}\r\n                    setUrls={setUrls}\r\n                    urls={urls}\r\n                    url={url}\r\n                    urlID={url.url_id}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default UrlList;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}